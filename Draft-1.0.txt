



Network Working Group                                          J. Hanson
Internet-Draft                                                Auth0 Inc.
Expires: January 15, 2018                                  July 14, 2017


            OAuth 2.0 Multi-Factor Authenticator Association
                  draft-hanson-oauth-mfa-assoc-latest

Abstract

   This specification defines mechanisms for dynamically associating
   authenticators with resource owners.  Once associated, an
   authenticator can be used for strong authorization within OAuth 2.0.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on January 15, 2018.

Copyright Notice

   Copyright (c) 2017 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.






Hanson                  Expires January 15, 2018                [Page 1]

Internet-DraOAuth 2.0 Multi-Factor Authenticator Association   July 2017


1.  Introduction

   In order for an OAuth 2.0 authorization server to enforce strong
   authorization, it must associate resource owners with one or more
   authenticators capable of responding to a strong authorization
   challenge.  This specification describes how an authenticator can be
   dynamically associated with a resource owner to obtain this
   information.

1.1.  Notational Conventions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   [RFC2119].

1.2.  Terminology

   This specification also defines the following terms:

   MFA Token:

      A short-lived token representing an authorization session.

2.  Authenticator Associate Endpoint

   The authenticator associate endpoint is an OAuth 2.0 endpoint defined
   in this document that is designed to allow an authenticator to be
   associated with a resource owner.  The authenticator associate
   endpoint MUST accept HTTP POST messages with request parameters
   encoded in the entity body using the "application/json" format.  The
   authenticator associate endpoint MUST be protected by a transport-
   layer security mechanism.

   The authenticator associate endpoint MUST be an OAuth 2.0 protected
   resource and it MUST accept access tokens as defined by [RFC6750] to
   limit association to only previously authorized parties.  The method
   by which the access token is obtained by the client is generally out
   of band; two such mechanisms are defined by this specification.  The
   method by which the access token is verified and validated by the
   authenticator associate endpoint is out of scope for this
   specification.

2.1.  Authenticator Associate Request

   The client makes a request to the authenticator associate endpoint by
   sending the following parameters with a content type of "application/
   json":



Hanson                  Expires January 15, 2018                [Page 2]

Internet-DraOAuth 2.0 Multi-Factor Authenticator Association   July 2017


   authenticator_types
         OPTIONAL.  Array of authenticator type strings that the client
         supports.  These authenticator types are defined as follows:

         *  "otp": A device that generates one-time passwords.

         *  "oob": A device that communicates securely with the
            authorization server over a secondary channel.

         Authorization servers MAY allow for other values as defined in
         the authenticator type extension process.

   oob_channels
         OPTIONAL.  Array of out-of-band channel strings that the client
         supports.  These out-of-band channels are defined as follows:

         *  "sms": SMS channel to the user at a registered number.

         *  "tel": Telephone call to the user at a registered number.

         *  "email": E-mail sent to the user at a registered address.

         *  "auth0": Push notification to Guardian app on user's mobile
            device.

         *  "duo": Push notification to Duo Mobile app on user's mobile
            device.

         Authorization servers MAY allow for other values as defined in
         the out-of-band channel extension process.  This parameter is
         used when the client indicates support for authenticator types
         including the value "oob".

   The access token MUST be sent as a Bearer Token, per section 2 of
   [RFC6750].  It is RECOMMENDED that the access token be sent using the
   Authorization header field.















Hanson                  Expires January 15, 2018                [Page 3]

Internet-DraOAuth 2.0 Multi-Factor Authenticator Association   July 2017


   For example, the client makes the following HTTPS request (line
   breaks are for display purposes only)::

   POST /associate HTTP/1.1
   Host: server.example.com
   Authorization: Basic czZCaGRSa3F0MzpnWDFmQmF0M2JW
   Content-Type: application/json

   {
   "authenticator_types": [
     "otp", "oob"
   ]
   }

2.2.  Authenticator Associate Response

   Upon a successful authenticator associate request, the authorization
   server selects an authenticator type that the client is capable of
   supporting and returns parameters needing to be bound to the device
   in order to complete the assocation process.  The server responsds
   with an HTTP 201 Created status code and a body of type "application/
   json" with the following content:

   authenticator_type
         REQUIRED.  Authenticator type that was associated with the
         user's account.

   oob_channel
         OPTIONAL.  out-of-band channel the authenticator will use.

   barcode_uri
         OPTIONAL.  URI to be rendered as a barcode which can be scanned
         by the authenticator to effect provisioning.

   recovery_codes
         OPTIONAL.  An array of strings to be used as recovery codes to
         gain access in the event that an authenticator is lost or
         malfunctions.

   oob_code
         OPTIONAL.  Out-of-band transaction code as defined by section
         3.2.1 of OAuth 2.0 Multi-Factor Authorization.  The parameter
         SHOULD be included when the value of "authenticator_type" is
         "oob" and MUST NOT be included otherwise.  The value of this
         parameter MAY be used in an access token request as defined by
         section 3.2.3 of OAuth 2.0 Multi-Factor Authorization.








Hanson                  Expires January 15, 2018                [Page 4]

Internet-DraOAuth 2.0 Multi-Factor Authenticator Association   July 2017


3.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <http://www.rfc-editor.org/info/rfc2119>.

   [RFC4627]  Crockford, D., "The application/json Media Type for
              JavaScript Object Notation (JSON)", RFC 4627,
              DOI 10.17487/RFC4627, July 2006,
              <http://www.rfc-editor.org/info/rfc4627>.

   [RFC6749]  Hardt, D., Ed., "The OAuth 2.0 Authorization Framework",
              RFC 6749, DOI 10.17487/RFC6749, October 2012,
              <http://www.rfc-editor.org/info/rfc6749>.

   [RFC6750]  Jones, M. and D. Hardt, "The OAuth 2.0 Authorization
              Framework: Bearer Token Usage", RFC 6750,
              DOI 10.17487/RFC6750, October 2012,
              <http://www.rfc-editor.org/info/rfc6750>.

   [I-D.ietf-oauth-discovery]
              Jones, M., Sakimura, N., and J. Bradley, "OAuth 2.0
              Authorization Server Metadata", draft-ietf-oauth-
              discovery-05 (work in progress), January 2017.

Author's Address

   Jared Hanson
   Auth0 Inc.

   Email: jaredhanson@gmail.com
   URI:   http://www.jaredhanson.net/


















Hanson                  Expires January 15, 2018                [Page 5]
